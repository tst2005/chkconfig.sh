#!/bin/sh

##--------------------------------------------------------
#   -- chkconfig.sh - A chkconfig clone in POSIX shell  --
#   -- Copyright (c) 2014-2015 TsT worldmaster.fr       --
##--------------------------------------------------------

# TOSEE: apt-cache show sysv-rc-conf

# TODO:
# - coder la partie list : inetd et xinetd (xinetd.conf)

# Warning: the xinetd info only read inside xinetd.d/*, not inside the xinetd.conf

# in original chkconfig(.pl) there are some ignored services :
#+halt______________________0:off__1:off__2:off__3:off__4:off__5:off
#+rc________________________0:off__1:off__2:off__3:off__4:off__5:off
#+reboot____________________0:off__1:off__2:off__3:off__4:off__5:off
#+single____________________0:off__1:on___2:off__3:off__4:off__5:off
#+skeleton__________________0:off__1:off__2:off__3:off__4:off__5:off


set -e

_chkconfig__usage() {
	echo 'Usage:'
	echo '        chkconfig -A|--allservices              (together with -l: show all services)'
#	echo '        chkconfig -t|--terse [names]            (shows the links)'
#	echo '        chkconfig -e|--edit  [names]            (configure services)'
#	echo '        chkconfig -s|--set   [name state]...    (configure services)'
	echo '        chkconfig -l|--list [--deps] [names]    (shows the links)'
#	echo '        chkconfig -c|--check name [state]       (check state)'
#	echo '        chkconfig -a|--add   [names]            (runs insserv)'
#	echo '        chkconfig -d|--del   [names]            (runs insserv -r)'
	echo '        chkconfig -h|--help                     (print usage)'
	echo '        chkconfig -f|--force ...                (call insserv with -f)'
	echo ''
#	echo '        chkconfig [name]             same as chkconfig -t'
	echo '        chkconfig name state...      same as chkconfig -s name state'
	echo '        chkconfig --root=<root> ...  use <root> as the root file system'
	echo '        chkconfig --color=<WHEN>     colorize the output.'
	echo '                                     <WHEN> defaults to "auto" or can be "never" or "always".'
}


_chkconfig__list_target_rcN() {
	local d="$1";shift
	local t="$1";shift
	if [ -d "$d" ]; then
		find "$d" -type l -name '*'"$t" \
		| (
		while read dir_file; do
			[ "$(dirname "$dir_file")" != "$d" ] && continue
			local name0="$(basename "$dir_file")"

			local act="$(printf %.1c "$name0")"
			[ "$act" != "S" ] && continue

			local name1="${name0#[SK][0-9][0-9]}"
			[ "$name1" != "$t" ] && continue

			if [ -f "${rootdir:-/}${initdir:-etc/init.d}/$name1" ]; then
				return 0
			fi
		done
		return 1
		)
		return $?
	fi
	return 1
}

_chkconfig__known_rc() {
	local target="$1"; shift
	for l in 0 1 2 3 4 5 6 B S; do
		local d
		case "$l" in
			[0-9]|S)  d="${rootdir:-/}etc/rc${l}.d" ;;
			B)        d="${rootdir:-/}etc/boot.d"   ;;
		esac
		[ ! -d "$d" ] && continue
		if [ -f "${rootdir:-/}${initdir:-etc/init.d}/$target" ] || find "$d" -type l -name '[KS][0-9][0-9]'"$target" |grep -q ''; then
			return 0
		fi
	done
	return 1
}

_chkconfig_color() {
	local target="${1:-green}";shift
	local fmt
	if $usecolor; then
		case "$target" in
			green) fmt='\033[32;01m%s\033[0m' ;;
		esac
	fi
	printf "${fmt:-%s}" "$1"
}

_chkconfig__list_target() {
	local target="$1"; shift

	if ! _chkconfig__known_rc "$target"; then
		echo >&2 "$target: unknown service"
		return 1
	fi
	printf "%-24s" "$target"
	for l in "$@"; do
		local d
		case "$l" in
			[0-9]|S) d="${rootdir:-/}etc/rc${l}.d" ;;
			B)       d="${rootdir:-/}etc/boot.d" ;;
		esac
		[ ! -d "$d" ] && continue
		if _chkconfig__list_target_rcN "$d" "$target"; then
			_chkconfig_color green "  $l:on "
		elif [ "$l" != "S" ]; then
			_chkconfig_color none "  $l:off"
		fi
	done
	#if ${printdeps}; then
	#	printf '\t' + print getdeps_rc($s)
	#fi
	printf '\n'
}

_chkconfig__list_targets() {
	for target in "$@"; do
		case "$target" in
			README) continue ;;
			.*) continue ;;
		esac

		_chkconfig__list_target "$target" 0 1 2 3 4 5 B S || true
	done
}

_chkconfig__listinitdname() {
	find "${rootdir:-/}etc/init.d/" \( -type f -o -type l \) -a -print \
	| sort -u \
	| while read -r d_f; do
		basename "$d_f"
	done
}

_chkconfig__list_xinetd() {
	echo 'xinetd based services:'
	(
		cd "${rootdir:-/}etc/xinetd.d/" && \
		grep -r 'disable.*=.*\(yes\|no\)' . | tr -d ' \t' | sort -u | (
			IFS=:
			while read -r p s; do
				case "$s" in
					disable=yes)	printf '%8s%-19s %s\n' "" "${p#./}:" "off" ;;
					disable=no)	printf '%8s%-19s %s\n' "" "${p#./}:" "$(_chkconfig_color green "on")"  ;;
					*) error
				esac
			done
		)
	)
}

_chkconfig__check_for_change() {
	UPDATERC="$(command -v update-rc.d)" || {
		echo >&2 "No such update-rc.d"
		exit 1
	}
	local INSSERV="$(command -v insserv)" || {
		echo >&2 "No such inssert"
		exit 1
	}
}

_chkconfig__needhelp() {
	while [ $# -gt 0 ]; do
		case "$1" in
			-h|--help) _chkconfig__usage; exit 0 ;;
			--) break ;;
		esac
		shift
	done
}
_chkconfig__needhelp "$@"

chkconfig() {
	local rootdir='/'

	local color="auto"
	local usecolor=true
	[ -t 1 ] || usecolor=false

	local force=""

	local initdir='etc/init.d'
	# local inetddir='etc/inetd.d' ;# not used yet
	# local xinetddir='etc/xinetd.d' ;# not used yet

	local SHOWDEPS=false
	local ALLSERVICES=false
	local DO_LIST=false
	local NOACTION=true

	if [ $# -eq 0 ]; then
		ALLSERVICES=true ;# default action is --allservices
	else

		while [ $# -gt 0 ]; do
			case "$1" in
				-f|--force)
					force=-f
				;;
				--root)
					shift;
					rootdir="${1%/}"
					case "$rootdir" in
						*/) ;;
						*) rootdir="${rootdir}/"
					esac
				;;
				--root=*)
					rootdir="${1#*=}"
					case "$rootdir" in
						*/) ;;
						*) rootdir="${rootdir}/"
					esac
				;;
				--color|--color=*)
					if [ "$1" = "--color" ]; then
						shift
						color="$1"
					else
						color="${1#*=}"
					fi
					case "$color" in
						auto)
							[ -t 1 ] && usecolor=true || usecolor=false
						;;
						never)
							usecolor=false
						;;
						always)
							usecolor=true
						;;
						*) echo >&2 "Invalid color option value"; exit 1
					esac
				;;
				-A|--allservices)
					if [ "${DO_LIST:-false}" = "false" ]; then
						NOACTION=false
						ALLSERVICES=true
					fi
				;;
				-l|--list)
					ALLSERVICES=false
					NOACTION=false
					DO_LIST=true
				;;
				--deps)
					SHOWDEPS=true ;# only used with --list, is not a action.
				;;
				-*)
					echo >&2 "Unknown option $1"
					#_chkconfig__usage
					exit 1
				;;
				*) break
			esac
			shift
		done

		if [ "${NOACTION}" = "true" ]; then
			ALLSERVICES=true
		fi
	fi

	if $DO_LIST; then
		if [ $# -eq 0 ]; then
			# with ou without SHOWDEPS
			_chkconfig__list_targets $(_chkconfig__listinitdname)
			_chkconfig__list_xinetd
			exit $?
		else
			# with ou without SHOWDEPS
			_chkconfig__list_targets "$@"; exit $?
		fi
	fi

	if $NOACTION; then
		while [ $# -gt 0 ]; do
			case "$2" in
				[0-9]*) shift 2 ; continue ;;
				on)
					local UPDATERC
					_chkconfig__check_for_change
					"$UPDATERC" ${force:+-f} "$1" enable >/dev/null 2>&1 || echo "Fail to enable '$1'."
					shift 2
					continue
				;;
				off)
					local UPDATERC
					_chkconfig__check_for_change
					"$UPDATERC" ${force:+-f} "$1" disable >/dev/null 2>&1 || echo "Fail to disable '$1'."
					shift 2
					continue
				;;
				*) _chkconfig__list_targets "$1"
			esac
			shift
		done
	fi

	if $ALLSERVICES; then
		#echo "all services not implemented yet"
		_chkconfig__list_targets $(_chkconfig__listinitdname)
	fi
}
chkconfig "$@"
exit $?
